<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Camellieeee</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-06-08T03:54:22.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Turing</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Facebook-immutable-深度剖析</title>
    <link href="http://yoursite.com/2018/06/08/Facebook-immutable-%E6%B7%B1%E5%BA%A6%E5%89%96%E6%9E%90/"/>
    <id>http://yoursite.com/2018/06/08/Facebook-immutable-深度剖析/</id>
    <published>2018-06-08T03:52:40.000Z</published>
    <updated>2018-06-08T03:54:22.000Z</updated>
    
    <content type="html"><![CDATA[<ul><li style="list-style: none"><input type="checkbox" checked> 理解immutable可先理解 Virtual DOM，参考下面文章：<br><a href="https://github.com/livoras/blog/issues/13" target="_blank" rel="noopener">https://github.com/livoras/blog/issues/13</a><h3 id="什么是Immutable-Data"><a href="#什么是Immutable-Data" class="headerlink" title="什么是Immutable Data"></a>什么是Immutable Data</h3>Immutable Data是指一旦被创造后，就不可以被改变的数据。</li></ul><p>通过使用Immutable Data，可以让我们更容易的去处理缓存、回退、数据变化检测等问题，简化我们的开发。</p><h3 id="js中的Immutable-Data"><a href="#js中的Immutable-Data" class="headerlink" title="js中的Immutable Data"></a>js中的Immutable Data</h3><p>在javascript中我们可以通过deep clone来模拟Immutable Data，就是每次对数据进行操作，新对数据进行deep clone出一个新数据。</p><p>deep clone<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * learning-immutable - clone-deep.js</span><br><span class="line"> * Created by mds on 15/6/6.</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">&apos;use strict&apos;;  </span><br><span class="line">var cloneDeep = require(&apos;lodash.clonedeep&apos;);</span><br><span class="line"></span><br><span class="line">var data = &#123;  </span><br><span class="line">    id: &apos;data&apos;,</span><br><span class="line">    author: &#123;</span><br><span class="line">        name: &apos;mdemo&apos;,</span><br><span class="line">        github: &apos;https://github.com/demohi&apos;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">var data1 = cloneDeep(data);</span><br><span class="line"></span><br><span class="line">console.log(&apos;equal:&apos;, data1===data); //false</span><br><span class="line"></span><br><span class="line">data1.id = &apos;data1&apos;;  </span><br><span class="line">data1.author.name = &apos;demohi&apos;;</span><br><span class="line"></span><br><span class="line">console.log(data.id);// data  </span><br><span class="line">console.log(data1.id);// data1</span><br><span class="line"></span><br><span class="line">console.log(data.author.name);//mdemo  </span><br><span class="line">console.log(data1.author.name);//demohi</span><br></pre></td></tr></table></figure></p><p>当然你或许意识到了，这样非常的慢。如下图，确实很慢</p><h3 id="主角immutable-js登场"><a href="#主角immutable-js登场" class="headerlink" title="主角immutable.js登场"></a>主角immutable.js登场</h3><p>immutable.js是由facebook开源的一个项目，主要是为了解决javascript Immutable Data的问题，通过参考hash maps tries 和 vector tries提供了一种更有效的方式。</p><p>简单的来讲，immutable.js通过structural sharing来解决的性能问题。我们先看一段视频，看看immutable.js是如何做的 </p><p>当我们发生一个set操作的时候，immutable.js会只clone它的父级别以上的部分，其他保持不变，这样大家可以共享同样的部分，可以大大提高性能。</p><h3 id="为什么你要在React-js中使用Immutable-Data"><a href="#为什么你要在React-js中使用Immutable-Data" class="headerlink" title="为什么你要在React.js中使用Immutable Data"></a>为什么你要在React.js中使用Immutable Data</h3><p>熟悉React.js的都应该知道，React.js是一个UI = f(states)的框架，为了解决更新的问题，React.js使用了virtual dom，virtual dom通过diff修改dom，来实现高效的dom更新。</p><p>听起来很完美吧，但是有一个问题。当state更新时，如果数据没变，你也会去做virtual dom的diff，这就产生了浪费。这种情况其实很常见，<a href="http://acdlite.github.io/flummox/docs/guides/why-flux-component-is-better-than-flux-mixin/" target="_blank" rel="noopener">可以参考flummox这篇文章</a></p><p>当然你可能会说，你可以使用PureRenderMixin来解决呀，<a href="https://reactjs.org/docs/pure-render-mixin.html" target="_blank" rel="noopener">PureRenderMixin</a>是个好东西，我们可以用它来解决一部分的上述问题，但是如果你留心的话，你可以在文档中看到下面这段提示。</p><ul><li>This only shallowly compares the objects. If these contain complex data structures, it may produce false-negatives for deeper differences. Only mix into components which have simple props and state, or use forceUpdate() when you know deep data structures have changed. Or, consider using immutable objects to facilitate fast comparisons of nested data.</li></ul><p>PureRenderMixin只是简单的浅比较，不使用于多层比较。那怎么办？？自己去做复杂比较的话，性能又会非常差。</p><p>方案就是使用immutable.js可以解决这个问题。因为每一次state更新只要有数据改变，那么PureRenderMixin可以立刻判断出数据改变，可以大大提升性能。这部分还可以参考官方文档Immutability Helpers</p><p>总结就是：使用PureRenderMixin + immutable.js</p><p>引用自：<a href="http://boke.io/immutable-js/" target="_blank" rel="noopener">http://boke.io/immutable-js/</a><br> API：<a href="http://www.baizn.cn/2016/09/23/Immutable-js%E4%B8%AD%E6%96%87API%E6%96%87%E6%A1%A3-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/" target="_blank" rel="noopener">http://www.baizn.cn/2016/09/23/Immutable-js%E4%B8%AD%E6%96%87API%E6%96%87%E6%A1%A3-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/</a></p><p> immutable API：<a href="https://yq.aliyun.com/articles/69516" target="_blank" rel="noopener">https://yq.aliyun.com/articles/69516</a>  👍</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li style=&quot;list-style: none&quot;&gt;&lt;input type=&quot;checkbox&quot; checked&gt; 理解immutable可先理解 Virtual DOM，参考下面文章：&lt;br&gt;&lt;a href=&quot;https://github.com/livoras
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Pack pictures to zip and download it</title>
    <link href="http://yoursite.com/2018/06/06/Pack-pictures-to-zip-and-download-it/"/>
    <id>http://yoursite.com/2018/06/06/Pack-pictures-to-zip-and-download-it/</id>
    <published>2018-06-06T09:20:51.000Z</published>
    <updated>2018-06-06T10:03:56.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Package-image-for-“zip”-in-H5"><a href="#Package-image-for-“zip”-in-H5" class="headerlink" title="Package image for “zip” in H5"></a>Package image for “zip” in H5</h1><h3 id="Problem-Introduce"><a href="#Problem-Introduce" class="headerlink" title="Problem Introduce"></a>Problem Introduce</h3><p>Sometimes you have many images need to download, and you will download them one by one, this`s so tired. </p><h3 id="Solve-IDEA"><a href="#Solve-IDEA" class="headerlink" title="Solve IDEA"></a>Solve IDEA</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;  </span><br><span class="line">&lt;html&gt;  </span><br><span class="line">    &lt;head&gt;  </span><br><span class="line">        &lt;meta charset=&quot;utf-8&quot; /&gt;  </span><br><span class="line">        &lt;title&gt;&lt;/title&gt;  </span><br><span class="line">        &lt;style&gt;  </span><br><span class="line">            img&#123;  </span><br><span class="line">                width: 200px;  </span><br><span class="line">                height: 150px;  </span><br><span class="line">            &#125;  </span><br><span class="line">        &lt;/style&gt;  </span><br><span class="line">    &lt;/head&gt;  </span><br><span class="line">    &lt;body&gt;  </span><br><span class="line">          </span><br><span class="line">        &lt;img src=&quot;http://hiracerapp.oss-cn-hangzhou.aliyuncs.com/test.jpeg&quot; /&gt;  </span><br><span class="line">        &lt;img src=&quot;http://hiracerapp.oss-cn-hangzhou.aliyuncs.com/test.jpeg&quot; /&gt;  </span><br><span class="line">        &lt;img src=&quot;http://hiracerapp.oss-cn-hangzhou.aliyuncs.com/test.jpeg&quot; /&gt;  </span><br><span class="line">        &lt;img src=&quot;http://hiracerapp.oss-cn-hangzhou.aliyuncs.com/test.jpeg&quot; /&gt;  </span><br><span class="line">        &lt;br /&gt;&lt;br /&gt;  </span><br><span class="line">        &lt;button onclick=&quot;packageImages()&quot;&gt;packageImages&lt;/button&gt;&lt;span id=&quot;status&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  </span><br><span class="line">          </span><br><span class="line">        &lt;script type=&quot;text/javascript&quot; src=&quot;js/jquery.min.js&quot;&gt;&lt;/script&gt;  </span><br><span class="line">        &lt;script type=&quot;text/javascript&quot; src=&quot;js/jszip.min.js&quot;&gt;&lt;/script&gt;  </span><br><span class="line">        &lt;script type=&quot;text/javascript&quot; src=&quot;js/FileSaver.js&quot;&gt;&lt;/script&gt;  </span><br><span class="line">        &lt;script type=&quot;text/javascript&quot;&gt;  </span><br><span class="line">        function packageImages()&#123;  </span><br><span class="line">            $(&apos;#status&apos;).text(&apos;处理中。。。。。&apos;);  </span><br><span class="line">              </span><br><span class="line">            var imgs = $(&apos;img&apos;);  </span><br><span class="line">              </span><br><span class="line">            var imgsSrc = [];  </span><br><span class="line">            var imgBase64 = [];  </span><br><span class="line">            var imageSuffix = [];//图片后缀  </span><br><span class="line">            var zip = new JSZip();  </span><br><span class="line">            zip.file(&quot;readme.txt&quot;, &quot;打包说明\n&quot;);  </span><br><span class="line">            var img = zip.folder(&quot;images&quot;);  </span><br><span class="line">              </span><br><span class="line">            for(var i=0;i&lt;imgs.length;i++)&#123;  </span><br><span class="line">                var src = imgs[i].getAttribute(&quot;src&quot;);  </span><br><span class="line">                var suffix = src.substring(src.lastIndexOf(&quot;.&quot;));  </span><br><span class="line">                imageSuffix.push(suffix);  </span><br><span class="line">                  </span><br><span class="line">                 getBase64(imgs[i].getAttribute(&quot;src&quot;))  </span><br><span class="line">                    .then(function(base64)&#123;  </span><br><span class="line">                        imgBase64.push(base64.substring(22));  </span><br><span class="line">                           </span><br><span class="line">                          //console.log(base64);//处理成功打印在控制台  </span><br><span class="line">                    &#125;,function(err)&#123;  </span><br><span class="line">                          console.log(err);//打印异常信息  </span><br><span class="line">                    &#125;);   </span><br><span class="line">                     </span><br><span class="line">            &#125;  </span><br><span class="line">            function tt()&#123;  </span><br><span class="line">                setTimeout(function()&#123;  </span><br><span class="line">                    if(imgs.length == imgBase64.length)&#123;  </span><br><span class="line">                        for(var i=0;i&lt;imgs.length;i++)&#123;  </span><br><span class="line">                            img.file(i+imageSuffix[i], imgBase64[i], &#123;base64: true&#125;);  </span><br><span class="line">                        &#125;  </span><br><span class="line">                        zip.generateAsync(&#123;type:&quot;blob&quot;&#125;).then(function(content) &#123;  </span><br><span class="line">                            // see FileSaver.js  </span><br><span class="line">                            saveAs(content, &quot;images.zip&quot;);  </span><br><span class="line">                        &#125;);  </span><br><span class="line">                        $(&apos;#status&apos;).text(&apos;处理完成。。。。。&apos;);  </span><br><span class="line">                          </span><br><span class="line">                    &#125;else&#123;  </span><br><span class="line">                        //console.log(&apos;imgs.length:&apos;+imgs.length+&apos;,imgBase64.length:&apos;+imgBase64.length);  </span><br><span class="line">                        $(&apos;#status&apos;).text(&apos;已完成：&apos;+imgBase64.length+&apos;/&apos;+imgs.length);  </span><br><span class="line">                        tt();  </span><br><span class="line">                    &#125;  </span><br><span class="line">                &#125;,100);  </span><br><span class="line">                  </span><br><span class="line">            &#125;  </span><br><span class="line">            tt();  </span><br><span class="line">              </span><br><span class="line">        &#125;  </span><br><span class="line">  </span><br><span class="line">    //传入图片路径，返回base64  </span><br><span class="line">    function getBase64(img)&#123;  </span><br><span class="line">        function getBase64Image(img,width,height) &#123;//width、height调用时传入具体像素值，控制大小 ,不传则默认图像大小  </span><br><span class="line">          var canvas = document.createElement(&quot;canvas&quot;);  </span><br><span class="line">          canvas.width = width ? width : img.width;  </span><br><span class="line">          canvas.height = height ? height : img.height;  </span><br><span class="line">   </span><br><span class="line">          var ctx = canvas.getContext(&quot;2d&quot;);  </span><br><span class="line">          ctx.drawImage(img, 0, 0, canvas.width, canvas.height);  </span><br><span class="line">          var dataURL = canvas.toDataURL();  </span><br><span class="line">          return dataURL;  </span><br><span class="line">        &#125;  </span><br><span class="line">        var image = new Image();  </span><br><span class="line">        image.crossOrigin = &apos;Anonymous&apos;;  </span><br><span class="line">        image.src = img;  </span><br><span class="line">        var deferred=$.Deferred();  </span><br><span class="line">        if(img)&#123;  </span><br><span class="line">          image.onload =function ()&#123;  </span><br><span class="line">            deferred.resolve(getBase64Image(image));//将base64传给done上传处理  </span><br><span class="line">          &#125;  </span><br><span class="line">          return deferred.promise();//问题要让onload完成后再return sessionStorage[&apos;imgTest&apos;]  </span><br><span class="line">        &#125;  </span><br><span class="line">      &#125;  </span><br><span class="line">      </span><br><span class="line">&lt;/script&gt;  </span><br><span class="line">    &lt;/body&gt;  </span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="PITS"><a href="#PITS" class="headerlink" title="PITS"></a>PITS</h3><ol><li><p>use the best new version filesave.js will be wrong.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.jq22.com/juqery-info11353</span><br></pre></td></tr></table></figure></li><li><p>use [canvas.toDataURL] load to  “xx Access-Control-Allow-Origin xx” error</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">This is a Cross domain question on the surface,</span><br><span class="line">and I solved it by add a time identification =&gt;</span><br><span class="line">...image.setAttribute(&apos;crossOrigin&apos;,&apos;anonymous&apos;);</span><br><span class="line">+ var timestamp = new Date().getTime();</span><br><span class="line">+ image.src = img + &apos;?&apos; + timestamp;</span><br><span class="line">var deferred = $.Deferred();...</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Package-image-for-“zip”-in-H5&quot;&gt;&lt;a href=&quot;#Package-image-for-“zip”-in-H5&quot; class=&quot;headerlink&quot; title=&quot;Package image for “zip” in H5&quot;&gt;&lt;/a
      
    
    </summary>
    
    
      <category term="learning" scheme="http://yoursite.com/tags/learning/"/>
    
  </entry>
  
  <entry>
    <title>Markdown常用语法</title>
    <link href="http://yoursite.com/2017/12/19/Markdown%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/"/>
    <id>http://yoursite.com/2017/12/19/Markdown常用语法/</id>
    <published>2017-12-19T03:25:31.000Z</published>
    <updated>2017-12-19T06:15:32.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Markdown简介"><a href="#Markdown简介" class="headerlink" title="Markdown简介"></a>Markdown简介</h3><p>  Markdown的目标是实现 易读易写 ,诞生的最大灵感来源于纯文本电子邮件的格式</p><h3 id="Markdown优点"><a href="#Markdown优点" class="headerlink" title="Markdown优点"></a>Markdown优点</h3><ul><li>纯文本,所有文本编辑器都能打开</li><li>让作者更加专注于文字而非排版</li><li>格式转换方便, Markdown的文本可以轻松转换为HTML,电子书等</li><li><p>Markdown 的标记语法极好的可读性</p><h3 id="Markdown语法"><a href="#Markdown语法" class="headerlink" title="Markdown语法"></a>Markdown语法</h3><h4 id="一-标题"><a href="#一-标题" class="headerlink" title="一. 标题"></a>一. 标题</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">#### 四级标题</span><br><span class="line">##### 五级标题</span><br><span class="line">###### 六级标题</span><br><span class="line">注: # 和 「标题」之间建议保留一个空格 ps:最标准的写法</span><br></pre></td></tr></table></figure><h4 id="二-列表"><a href="#二-列表" class="headerlink" title="二. 列表"></a>二. 列表</h4><h5 id="1-无序列表"><a href="#1-无序列表" class="headerlink" title="1. 无序列表"></a>1. 无序列表</h5><p>无序列表只需要在文字前面加上 <code>-</code> 就行了, 例如: <br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- 文本1</span><br><span class="line">- 文本2</span><br><span class="line">- 文本3</span><br></pre></td></tr></table></figure><h5 id="2-有序列表"><a href="#2-有序列表" class="headerlink" title="2. 有序列表"></a>2. 有序列表</h5><p>在文字前面加上<code>1. 2. 3.</code>就可以了, 例如: <br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. 文本1</span><br><span class="line">2. 文本2</span><br><span class="line">3. 文本3</span><br></pre></td></tr></table></figure><h4 id="三-链接"><a href="#三-链接" class="headerlink" title="三. 链接"></a>三. 链接</h4><h5 id="1-文字链接"><a href="#1-文字链接" class="headerlink" title="1. 文字链接"></a>1. 文字链接</h5><p>在Markdown中,插入链接不需要其他按钮, 只需要使用<code>[显示文本](链接地址)</code>的语法就行了,例如:<br><a href="http://www.camellieeee.com" target="_blank" rel="noopener">Camellieeee</a></p><p><code>[Camellieeee](http://www.camellieeee.com)</code></p><h5 id="2-插入图片"><a href="#2-插入图片" class="headerlink" title="2. 插入图片"></a>2. 插入图片</h5><p>在Markdown中,插入链接不需要其他按钮, 只需要使用<code>![](图片链接地址)</code>的语法就行了,例如:<br><img src="http://www.camellieeee.com/wp-content/uploads/2017/10/fish.jpg" alt=""></p><p><code>![](图片链接)</code></p><h4 id="四-引用"><a href="#四-引用" class="headerlink" title="四. 引用"></a>四. 引用</h4><p>在写作的时候,有时需要引用一些他人的文字, 这时候就需要使用引用这个语法了,只需要在引用的文字前加上 <code>&gt;</code> 就好了, 例如:</p><blockquote><p>大江东去浪淘尽,千古风流人物</p></blockquote><p><code>&gt; 大江东去浪淘尽,千古风流人物</code></p><h4 id="五-粗体和斜体"><a href="#五-粗体和斜体" class="headerlink" title="五. 粗体和斜体"></a>五. 粗体和斜体</h4><p>粗体: 用一个<code>**</code>包含需要粗体的文字;<br><br>斜体: 用两个<code>*</code>包含需要斜体的文字<br><br>例如: <strong>大江东去浪淘尽</strong>, <em>千古风流人物</em></p><p><code>**大江东去浪淘尽**, *千古风流人物*</code></p><h4 id="六-代码引用"><a href="#六-代码引用" class="headerlink" title="六. 代码引用"></a>六. 代码引用</h4><p>单段引用: 用 「<code>`」将代码包裹起来就行了,例如:&lt;br/&gt;</code>绳命是如此地精彩`</p><blockquote><p><code>绳命是如此地精彩</code></p></blockquote><p>多段引用: 用三个斜点将代码包裹起来就行了, 例如:<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">绳命是如此地精彩</span><br><span class="line">绳命是如此的精彩</span><br><span class="line">绳命是如此德精彩</span><br></pre></td></tr></table></figure><h4 id="七-表格"><a href="#七-表格" class="headerlink" title="七. 表格"></a>七. 表格</h4><p>第一行 <code>|名称|名称|名称|</code> <br><br>第二行 <code>| :--- | ---: | :---: |</code> <br><br><code>-</code> 至少要有三条, <code>:</code> 可有可无, 表示在哪边就向哪边对齐</p></li></ul><table><thead><tr><th>Name</th><th>Phone Number</th><th>Email</th></tr></thead><tbody><tr><td>Turing</td><td>18888888888</td><td>1585256113@qq.com</td></tr></tbody></table><p>  相关代码<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">| Name | Phone Number | Email |</span><br><span class="line">| ---- | ------------ | ----- |</span><br><span class="line">| Turing | 18888888888 | 1585256113@qq.com |</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Markdown简介&quot;&gt;&lt;a href=&quot;#Markdown简介&quot; class=&quot;headerlink&quot; title=&quot;Markdown简介&quot;&gt;&lt;/a&gt;Markdown简介&lt;/h3&gt;&lt;p&gt;  Markdown的目标是实现 易读易写 ,诞生的最大灵感来源于纯文本电子
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>linux常见命令</title>
    <link href="http://yoursite.com/2017/12/19/linux%E5%B8%B8%E8%A7%81%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2017/12/19/linux常见命令/</id>
    <published>2017-12-19T03:23:58.000Z</published>
    <updated>2017-12-19T06:26:35.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Linux简介"><a href="#Linux简介" class="headerlink" title="Linux简介"></a>Linux简介</h2><p>Linux是一个Unix类操作系统,完全开发源码，多用户多任务，服务器(数据库服务器、Web服务器、应用服务器、日志服务器、图片服务器等等)、嵌入式领域(如路由器等需要Linux才能启动)、移动终端(比如安卓手机等、平板)，Linux主流版本有：RedHat、CentOS、Ubuntu、SUSE、FreeBSD</p><h2 id="安装Linux系统-选择性掌握"><a href="#安装Linux系统-选择性掌握" class="headerlink" title="安装Linux系统(选择性掌握)"></a>安装Linux系统(选择性掌握)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">1)、安装虚拟机软件(VMware，注意不要随意卸载该软件，在Win7系统下建议安装8.0或9.0)</span><br><span class="line">2)、用虚拟机模拟电脑(四类操作系统：windows、Linux、Mac、Dos)</span><br><span class="line">3)、安装Linux系统(掌握)</span><br><span class="line">    Linux分区实际上是划分目录结构(Linux只识别文件和目录),必须有&quot;根目录(/)&quot;和&quot;交换目录(swap)&quot;</span><br><span class="line">交换目录(swap):提供虚拟内存，当电脑内存不足，交换目录所占用的磁盘空间会当做虚拟内存来使用</span><br><span class="line">    磁盘8G(/dev/sda表示一个SCSI接口的硬盘，/dev/hda表示一个IDE接口的硬盘):</span><br><span class="line">    swap: 1G</span><br><span class="line">    /: 剩余的全部空间</span><br><span class="line">    注：安装Linux操作系统，至少要有8G的磁盘空间(也就说给虚拟电脑至少要分配8G的磁盘空间)</span><br><span class="line"></span><br><span class="line">Linux超级管理员账号是：root</span><br><span class="line"></span><br><span class="line">    Ctrl+C终止一条命令</span><br><span class="line">    CTRL+Z停止进程并放入后台</span><br><span class="line">    jobs 显示当前暂停的进程</span><br><span class="line">    bg %N 使第N个任务在后台运行（%前有空格）</span><br><span class="line">    fg %N 使第N个任务在前台运行</span><br><span class="line">    默认bg，fg不带%N时表示对最后一个进程操作！</span><br></pre></td></tr></table></figure><h2 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a>基本命令</h2>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">4条最简单的命令：</span><br><span class="line">ls / ll / ls -l  #查看目录的内容</span><br><span class="line">pwd #查看当前目录的绝对路径</span><br><span class="line">cd #跳到指定位置</span><br><span class="line">clear #清屏</span><br><span class="line"></span><br><span class="line">示例：</span><br><span class="line">[root@localhost bin]#pwd</span><br><span class="line">/usr/bin</span><br><span class="line">[root@localhost bin]#cd ../sbin</span><br><span class="line">[root@localhost sbin]#pwd</span><br><span class="line">/usr/sbin</span><br><span class="line">[root@localhost sbin]#cd ../../opt</span><br><span class="line">[root@localhost opt]#pwd</span><br><span class="line">/opt</span><br><span class="line">[root@localhost opt]#ls d05/</span><br><span class="line">[root@localhost opt]#ls ./d05/</span><br><span class="line"></span><br><span class="line">Linux系统是严格区分大小写</span><br><span class="line"></span><br><span class="line">bash、csh、ssh</span><br><span class="line"></span><br><span class="line">echo $SHELL   输出SHELL变量的值</span><br><span class="line"></span><br><span class="line">shell命令行</span><br><span class="line"></span><br><span class="line">#(表示超级用户)</span><br><span class="line">$(表示普通用户)</span><br><span class="line">root表示当前操作的用户</span><br><span class="line">localhost表示主机名</span><br><span class="line"></span><br><span class="line">~表示当前处在哪个目录中,~表示当前登录的用户的home目录(普通用户登录后默认进入到home目录)</span><br><span class="line"></span><br><span class="line">路径： 表示文件或文件夹所在的位置</span><br><span class="line">   绝对路径：以 / 开头</span><br><span class="line">   相对路径：.表示当前目录；..表示当前目录的上一层</span><br><span class="line"></span><br><span class="line">mkdir --help  #查看命令的帮助信息</span><br><span class="line">man mkdir     #查看命令的详细帮助</span><br></pre></td></tr></table></figure><h2 id="一、常用管理命令："><a href="#一、常用管理命令：" class="headerlink" title="一、常用管理命令："></a>一、常用管理命令：</h2>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">1、reboot  #重启</span><br><span class="line">2、shutdown -h 0 或者 init 0 /(halt)#关机</span><br><span class="line"> PS:没有注销的命令哦^_^</span><br><span class="line"></span><br><span class="line">3、cd     切换路径     change directory</span><br><span class="line">        cd -   回到上次所在目录</span><br><span class="line">4、pwd    查看当前路径</span><br><span class="line">5、whoami   查看当前用户</span><br><span class="line">6、uname -r    查linux内核版本号</span><br><span class="line">7、clear       清屏命令</span><br><span class="line">8、tab键  用来路径补全功能</span><br><span class="line">9、netstat -an  查找linux或者windows下所有的端口</span><br></pre></td></tr></table></figure><h2 id="二、文件管理命令"><a href="#二、文件管理命令" class="headerlink" title="二、文件管理命令:"></a>二、文件管理命令:</h2>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">1、ll （ls -l）   查看当前目录下有哪些文件或文件夹</span><br><span class="line">ps: ls -l 的别名就是ll，以 - 开头的，表示文件；以d开头的，表示目录。</span><br><span class="line"></span><br><span class="line">2、mkdir 文件夹名   创建文件夹，可以同时创建多个文件夹，如：mkdir d01 d02</span><br><span class="line">3、mkdir -p ./first/second    创建多层文件夹    first和second都不存在情况下建目录</span><br><span class="line"></span><br><span class="line">4、touch 文件名    #touch test.txt    创建文件</span><br><span class="line"></span><br><span class="line">5、rmdir d101 #删除空目录d101</span><br><span class="line">6、rmdir d102 d103 #同时删除两个空目录d102,d103</span><br><span class="line">7、rmdir -p d104/d105/ #删除d105目录后，若d104是空的，则连d104一起删除</span><br><span class="line">8、rm -rf 文件名或文件夹名                删除文件</span><br><span class="line"></span><br><span class="line">9、cp 源文件路径/源文件名 目标路径         拷贝文件 #cp T01/test.txt T02/</span><br><span class="line">10、cp -R 源目录名 目标路径      拷贝文件夹（把文件夹的所有内容一起拷贝）#cp -R T01 T02</span><br><span class="line">        -d ：若来源文件为连结文件的属性(link file)，则复制连结文件属性而非档案本身；</span><br><span class="line">        -p ：连同档案的属性一起复制过去，而非使用预设属性；</span><br><span class="line">        -r ：递归持续复制，用于目录的复制行为；</span><br><span class="line">        -a ：相当于 -pdr 的意思</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">11、查看文件命令：(install.log)</span><br><span class="line">（1）more 文件名         �按回车一行，空格一页。不能向上下翻行。</span><br><span class="line">（2）less 文件名          按回车一行，空格一页。可以通过上下键上下翻行。按q就退出。</span><br><span class="line">（3）head -n 文件名       查看文件的前n行， n表示你要看的行数。</span><br><span class="line">（4）tail - 文件名        查看文件的后n行</span><br><span class="line">（5）cat 文件名           查看文件的所有内容</span><br><span class="line">（6）cat -n 文件名        查看文件的所有内容，并显示行数</span><br><span class="line"></span><br><span class="line">12、&gt;      导入(复制)      cat A &gt; B    把A的内容导入到B(把原来的内容覆盖)</span><br><span class="line">13、&gt;&gt;    追加导入   cat A B &gt;&gt;C   把A和B的内容导入C</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">14、mv 源文件名 目标文件名     文件改名或剪切文件（文件和文件夹一样操作）</span><br><span class="line">    #mv move.txt ./test01/mv.txt</span><br><span class="line"></span><br><span class="line">15、对文件内容筛选查找，用管道加上:grep 搜索字符串</span><br><span class="line"></span><br><span class="line">如：查找系统中有没有启用80端口： netstat -an | grep 80</span><br><span class="line"></span><br><span class="line">练习:查找 ifcfg-eth0 中包含“OOT”字符串的信息</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">16、find 路径 参数 参数值</span><br><span class="line">ps： 参数：-name 后面跟文件名</span><br><span class="line"></span><br><span class="line">17、locate 文件名   根据索引表查找文件，效率高，但是需要经常更新索引表，使用updatedb更新索引表</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">18、wc -l 文件名    统计当前文件的行数      wc -l ./T01/tt.txt</span><br><span class="line">       -m 文件名    统计当前文件的字符数    wc -m ./T01/tt.txt</span><br><span class="line">       -c d01/f102  统计当前文件的的字节数  wc -c ./T01/tt.txt</span><br></pre></td></tr></table></figure><h2 id="三、压缩管理"><a href="#三、压缩管理" class="headerlink" title="三、压缩管理"></a>三、压缩管理</h2>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">压缩管理：包(.tar)、压缩文件(.gz)、压缩包(.tar.gz 或 .tgz)</span><br><span class="line"> #tar命令打包的格式：</span><br><span class="line"> tar 参数 目标文件路径/包名 被打包的文件名称</span><br><span class="line"> tar -cvf t101.tar f101 #将目录f101和文件打到当前目录下的t101.tar包中</span><br><span class="line"> tar -cvf /opt/t101.tar ./d101  #将当前目录d01打到/opt/t101.tar包中</span><br><span class="line"></span><br><span class="line"> tar -tvf t101.tar  #查看t101.tar包中的内容</span><br><span class="line"></span><br><span class="line"> tar -xvf t101.tar #将t101.tar包中的内容释放到当前目录中</span><br><span class="line"> tar -xvf t101.tar -C /opt/d102/ #将t101.tar包中的内容释放到/opt/d102/目录中</span><br><span class="line"></span><br><span class="line"> 压缩：</span><br><span class="line"> gzip只能压缩单个文件，不能压缩目录、也不能同时压缩多个文件</span><br><span class="line"> 压缩比：1表示压缩比最小；9表示压缩比最大</span><br><span class="line">     2G --&gt; 1G(压缩比小，压缩速度快)</span><br><span class="line">     2G --&gt; 500M(压缩比大，压缩速度慢)</span><br><span class="line"></span><br><span class="line"> gzip -1 f101 #将f101压缩，形成压缩文件f101.gz</span><br><span class="line"> gzip -9 f101 #将f101压缩，形成压缩文件f101.gz</span><br><span class="line"></span><br><span class="line"> 查看压缩包：</span><br><span class="line"> gzip -l f101.gz #查看压缩文件f101.gz的压缩信息，小写字母l</span><br><span class="line"></span><br><span class="line"> 解压：</span><br><span class="line"> gzip -d f101.gz 或 gunzip f101.gz #解压f101.gz文件</span><br><span class="line"></span><br><span class="line"> 对包进行压缩：</span><br><span class="line"> tar -cvf t101.tar f101  #首先打包操作</span><br><span class="line"> gzip -9 t101.tar #然后将包压缩，最终形成压缩包t101.tar.gz</span><br><span class="line"> tar命令只有打包功能，没有压缩功能，它是借助gzip进行压缩</span><br><span class="line"></span><br><span class="line"> 打包并压缩：</span><br><span class="line"> tar 参数 目标文件路径和包名 被打包的文件名称</span><br><span class="line"> tar -czvf t101.tar.gz T101 #将目录和文件打到当前目录下的t101.tar.gz压缩包中</span><br><span class="line"> tar -czvf /opt/t101.tar.gz T101 #将目录和文件打到/opt/t101.tgz压缩包中</span><br><span class="line"></span><br><span class="line"> tar -tzvf ./t101.tar.gz #查看t101.tar.gz压缩包中的内容</span><br><span class="line"></span><br><span class="line"> tar -xzvf t101.tar.gz #将t101.tar.gz压缩包中的内容释放到当前目录中</span><br><span class="line"> tar -xzvf t101.tar.gz -C /opt/d102/ #将t101.tar.gz压缩包中的内容解压到/opt/d102/目录中</span><br><span class="line"></span><br><span class="line"> #针对windows平台下的zip压缩包的解压</span><br><span class="line"> unzip -d d101/ f101.zip  #将f101.zip解压到d101目录下</span><br></pre></td></tr></table></figure><h2 id="四：网络配置"><a href="#四：网络配置" class="headerlink" title="四：网络配置"></a>四：网络配置</h2>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">ifconfig -a #查ip信息</span><br><span class="line">    ping  #测试网络是否连通</span><br><span class="line">    setup  #配置ip、防火墙、服务等信息</span><br><span class="line">    service network restart(start\stop)  #重启服务</span><br><span class="line">centos7</span><br><span class="line">    systemctl restart(start\stop) network</span><br><span class="line">    虚拟网卡桥接连接方式</span><br><span class="line">    hostname #输出主机名</span><br><span class="line"></span><br><span class="line">    客户端工具(远程连接Linux服务器)：crt、xshell、ssh、puty，通过SSH2(端口是22)协议远程连接到Linux服务器(SSH2协议是在安装Linux操作系统时自带的协议),前2个最常用，支持中文,后2个不支持中文</span><br><span class="line"></span><br><span class="line">    从一台服务器远程访问另一台服务器</span><br><span class="line">    ssh 被访问的机器的用户名@被访问的机器的IP</span><br><span class="line">    ssh root@172.11.1.67</span><br><span class="line">    退出：logout</span><br><span class="line"></span><br><span class="line">    scp #远程复制文件(夹)</span><br><span class="line">    scp -r root@172.11.1.112:/root/install.log /root/</span><br></pre></td></tr></table></figure><h2 id="五：组-amp-用户-amp-权限"><a href="#五：组-amp-用户-amp-权限" class="headerlink" title="五：组&amp;用户&amp;权限"></a>五：组&amp;用户&amp;权限</h2><h4 id="组管理：-cat-etc-group-，查看当前系统存在多少个组"><a href="#组管理：-cat-etc-group-，查看当前系统存在多少个组" class="headerlink" title="组管理：( cat /etc/group ，查看当前系统存在多少个组)"></a>组管理：( cat /etc/group ，查看当前系统存在多少个组)</h4>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">groupadd g1015 #组必需要有组id，如果没有指定组id，则系统自动分配唯一的组id</span><br><span class="line">groupadd -g 499 g1015 #指定了组id，则系统不会自动组id</span><br><span class="line">groupmod -n g1066 g106 #将g106更名成g1066</span><br><span class="line">groupmod -g 498 g10166 #将组g10166的id更改成498</span><br><span class="line">groupdel g10166 #删除组g10166,若组中有用户，若组中包含用户，则不能删除组(必须确保组是空的才能删除组)</span><br></pre></td></tr></table></figure><h4 id="用户管理：-etc-passwd存储用户基本信息、-etc-shadow存储用户密码信息"><a href="#用户管理：-etc-passwd存储用户基本信息、-etc-shadow存储用户密码信息" class="headerlink" title="用户管理：(/etc/passwd存储用户基本信息、/etc/shadow存储用户密码信息)"></a>用户管理：(/etc/passwd存储用户基本信息、/etc/shadow存储用户密码信息)</h4>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">一个用户可以拥有多个多个组:主组(一个有且只能有一个主组)和附属组(0到多个附属组)</span><br><span class="line">用户的密码若是以*号或!开头，则表示该用户不能登录Linux操作系统</span><br><span class="line"></span><br><span class="line">useradd u101 #用户登录后，默认进入到其home目录，home目录在/home/目录下(root用户的home目录是/root)</span><br><span class="line">passwd u101  #passwd默认给当前用户设置密码,密码=字母+数字+下划线(_)，超过8位，设置密码时，不会显示出来</span><br><span class="line">su - u101    #切换用户</span><br><span class="line"></span><br><span class="line">usermod    -L u101 #锁定用户，即用户不能登录</span><br><span class="line">usermod -U u101 #解锁用户</span><br><span class="line">userdel -r u101 #彻底删除用户</span><br><span class="line"></span><br><span class="line">usermod -a -G groupA user    #将user用户加到groupA组中</span><br><span class="line"></span><br><span class="line">groups 用户名    #查看用户所在的组</span><br><span class="line">#id u101 #查看用户信息：如uid、所有的组信息等等</span><br></pre></td></tr></table></figure><h4 id="权限：Linux中通过控制每一类-有3类用户-用户对文件-文件夹的读、写、执行来实现权限控制"><a href="#权限：Linux中通过控制每一类-有3类用户-用户对文件-文件夹的读、写、执行来实现权限控制" class="headerlink" title="权限：Linux中通过控制每一类(有3类用户)用户对文件/文件夹的读、写、执行来实现权限控制"></a>权限：Linux中通过控制每一类(有3类用户)用户对文件/文件夹的读、写、执行来实现权限控制</h4>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">chmod 权限 文件名</span><br><span class="line">rw_rw_r__: 前三个字符表示拥有者的权限，中间三个字符是组权限，后面三个字符其他人。</span><br><span class="line">r: read       可读</span><br><span class="line">w: write      可写</span><br><span class="line">x：execute    可执行</span><br><span class="line">r用数字4表示，w用数字2表示，x用数字1表示。</span><br><span class="line">drwxr-xr-x  2 root root 4.0K 11-06 18:30 Desktop</span><br><span class="line"></span><br><span class="line">u：所属用户</span><br><span class="line">g：所属用户所在组的用户</span><br><span class="line">o：组以外的用户</span><br><span class="line">chmod u-w,g+w,o=r Desktop/ #执行完后变成dr-xrwxr--</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">d:表示该文件为文件夹</span><br><span class="line">第一个rwx，表示该文件所属的用户对其所拥有的操作权限</span><br><span class="line">第二个rwx，表示与该文件所属用户在同组内的用户对其所拥有的操作权限</span><br><span class="line">第三个rwx，表示不与该文件所属用户在同组内的用户对其所拥有的操作权限</span><br><span class="line">第一个root:表示该文件夹属于哪个用户</span><br><span class="line">第二个root:表示该文件夹属于哪个组</span><br><span class="line"></span><br><span class="line">drwxr-xr-x(一个组中可以包含0到多个用户)</span><br><span class="line">d表示是个普通文件夹，-表示普通文件</span><br><span class="line">rwx:文件拥有者具备的权限(u),7, 7-2</span><br><span class="line">r-x:文件所属组中的其他用户所具备的权限(g),5, 5+2</span><br><span class="line">r-x:其他用户所具备的权限(o),5, 4</span><br><span class="line"></span><br><span class="line">#r=4;w=2;x=1，755</span><br><span class="line">chmod -R 574 Desktop/ 等同于 chmod -R u-w,g+w,o=r Desktop/  (-R表示文件夹及其所有子内容都会发生更改)</span><br><span class="line"></span><br><span class="line">最大是777(drwxrwxrwx)，最小是000(d---------)</span><br><span class="line">chmod 777 Desktop/ 等同于 chmod a=rwx Desktop/ #a代表所有用户</span><br></pre></td></tr></table></figure><h4 id="更改文件的属主："><a href="#更改文件的属主：" class="headerlink" title="更改文件的属主："></a>更改文件的属主：</h4>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">1、更改单个文件的属主：</span><br><span class="line">语法：chown 用户名 文件名</span><br><span class="line">      chown wsg echo.sh</span><br><span class="line"></span><br><span class="line">2、更改文件夹的属主：</span><br><span class="line">语法：chown -R 用户名 文件名</span><br><span class="line">chown -R u101 Desktop/ #单独更改文件夹的拥有者(-R表示文件夹的所有子内容全部更改)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">3、更改单个文件的属组：</span><br><span class="line">语法：chgrp 组名 文件名</span><br><span class="line">      chgrp g1015 echo.sh</span><br><span class="line"></span><br><span class="line">4、更改文件夹的属组</span><br><span class="line">语法：chgrp -R 组名 文件名</span><br><span class="line">chgrp -R g1015 Desktop/ #单独更改文件夹的所属组</span><br><span class="line"></span><br><span class="line">5、同时更改文件的拥有者和所属组</span><br><span class="line">语法：chown 用户名:组名 文件名</span><br><span class="line">chown u101:g1015 install.log.syslog #同时更改文件的拥有者和所属组</span><br><span class="line"></span><br><span class="line">6、同时更改文件夹和文件夹下的所有内容的拥有者和所属组</span><br><span class="line">语法：chown -R 用户名:组名 文件名</span><br><span class="line">chown -R u101:g1015 test01 #同时更改文件的拥有者和所属组</span><br></pre></td></tr></table></figure><h2 id="六：扩展命令"><a href="#六：扩展命令" class="headerlink" title="六：扩展命令:"></a>六：扩展命令:</h2>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">cal  #查看日期</span><br><span class="line">date  #查看时间</span><br><span class="line">who #查看有哪些用户登录了系统</span><br><span class="line">whoami #查看当前是哪个用户登录了系统</span><br><span class="line">history #查看历史命令</span><br><span class="line"></span><br><span class="line">less f101查看文件，按v键进入vi编辑器，:wq保存退出  :q! 强制退出</span><br><span class="line">grep zpp /etc/passwd  #到/etc/passwd文件中查找zpp字符串</span><br><span class="line">grep -n &quot;root&quot; /etc/group  #查看/etc/group文件中包含root的行并显示行号</span><br><span class="line">cat install.log | grep isdn4k #到install.log文件中搜索内容:isdn4k(grep &quot;isdn4k&quot; install.log)</span><br><span class="line"></span><br><span class="line">du -h 文件名 #查文件或目录的大小</span><br><span class="line">#查看文件夹大小 du -h T01</span><br><span class="line">#查看文件大小 du -h tt.txt</span><br><span class="line"></span><br><span class="line">echo &quot;&quot; &gt; f101 #清空文件f101中的内容，但仍然有一空行 (&gt;是定向输出符，即将内容输出到指定位置；&gt;&gt;是追加符号)</span><br><span class="line">cat /dev/null &gt; f101 #清空文件f101中的内容，不会有空行</span><br><span class="line"></span><br><span class="line">chkconfig --list #列出所有服务(相当于windows下的services.msc所列出的内容)</span><br><span class="line"></span><br><span class="line">tcpdump -X -s 0 -w test.cap port 1813 #抓包命令</span><br><span class="line"></span><br><span class="line">ps #查看当前终端正在运行的进程</span><br><span class="line">ps -ef #查看系统正在运行的进程</span><br><span class="line">ps -ef | grep bash #查看系统正在运行的进程名包含bash的进程(即查看指定用户的进程)</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# ps -ef | grep wushigui</span><br><span class="line">root      3744  2576  0 11:25 ?        00:00:00 sshd: wushigui [priv]</span><br><span class="line">wushigui  3746(当前进程号)  3744(父进程号)  0 11:25 ?        00:00:00 sshd: wushigui@pts/2</span><br><span class="line">wushigui  3747  3746  0 11:25 pts/2    00:00:00 -bash</span><br><span class="line"></span><br><span class="line">kill -9 pid #强制终止(pid表示进程号，可以用ps命令查看到进程号)</span><br><span class="line"></span><br><span class="line">top #查看当前系统的资源使用率(默认是5秒刷新一次，相当于windows的资源管理器)</span><br><span class="line">d  强制踢出已登录用户：</span><br><span class="line">w  #查看在线用户</span><br><span class="line">          方式一：</span><br><span class="line">        ps -ef | grep 用户名  #查到用户登陆的进程号对应的pid</span><br><span class="line">        kill -9 登陆进程号</span><br><span class="line">        ps -ef | grep test</span><br><span class="line">        kill -9 3611</span><br><span class="line"></span><br><span class="line">         方式二：killall -9 -u 用户名</span><br><span class="line">        killall -9 -u test</span><br><span class="line"></span><br><span class="line">    方式三：如果一台服务器有在多处用同</span><br><span class="line"></span><br><span class="line">        diff 文件1 文件2  #比较两个文件的内容</span><br><span class="line">        df -h #查磁盘信息</span><br><span class="line">        free -m #查内存</span><br><span class="line"></span><br><span class="line">sed -ne &apos;3,30p&apos; termp #查看文件制定范围的行(例：第3行到第30行)</span><br><span class="line">awk -F : &apos;&#123;print $1, $5&#125;&apos; /etc/passwd #查看/etc/passwd文件中的第1列、第5列(-F :表示用:号分隔，默认是空格分隔)</span><br><span class="line">awk -F : &apos;&#123;print $1, $5&#125;&apos; /etc/passwd &gt; f101</span><br></pre></td></tr></table></figure><h2 id="七：Vi命令扩展-命令模式下的操作"><a href="#七：Vi命令扩展-命令模式下的操作" class="headerlink" title="七：Vi命令扩展(命令模式下的操作):"></a>七：Vi命令扩展(命令模式下的操作):</h2>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">三种模式：（1）命令模式</span><br><span class="line">         （2）编辑模式</span><br><span class="line">         （3）末行模式</span><br><span class="line">三种的切换:</span><br><span class="line">        命令模式切换到编辑模式：输入i/a。</span><br><span class="line">        编辑模式退到命令模式：esc</span><br><span class="line"></span><br><span class="line">2、末行模式是以冒号开头。注意：末行模式必须是在命令模式下操作。命令：</span><br><span class="line">（1）:set nu            显示行号</span><br><span class="line">（2）:set nonu          不显示行号</span><br><span class="line">（3）:w                 保存</span><br><span class="line">（4）:q                 退出</span><br><span class="line">（5）:wq                保存加退出</span><br><span class="line">（6）:n      n行数      跳转到指定行</span><br><span class="line">（7）:q!                强制退出</span><br><span class="line">（8）:w 文件名          另存为</span><br><span class="line"> 用命令:set ff?　　可以看到dos或unix的字样.</span><br><span class="line"> 用:set ff=unix把它强制为unix格式，也可以用sed 这样的工具来做:</span><br><span class="line"></span><br><span class="line">（9）:n1,n2s/需要替换的字符串/替换字符串/参数</span><br><span class="line">n1表示从第n1行开始，表示一个具体的数字，比如：1</span><br><span class="line">n2表示从第n2行结束，表示一个具体的数字，比如：20</span><br><span class="line">参数：g表示所有找出字符都替换没有确认。</span><br><span class="line">      c表示每一次都确认</span><br><span class="line">      i表示忽略大小写，但是i需要跟c或是g一起使用。</span><br><span class="line"></span><br><span class="line">:s/is/IS/ #替换当前行第一个is为IS</span><br><span class="line">:s/is/IS/g #替换当前行所有is为IS</span><br><span class="line"></span><br><span class="line">(n为数字，若n为点好(即.)，表示从当前行开始到最后一行)</span><br><span class="line">:n,$s/is/IS #替换第n行开始到最后一行中每一行的第一个is为IS</span><br><span class="line">:1,5s/is/IS #替换第1行开始到第5行中每一行的第一个is为IS</span><br><span class="line"></span><br><span class="line">:n,$s/is/IS/g   #替换第n行开始到最后一行中每一行的所有is为IS</span><br><span class="line">:1,$s/is/IS/g   #替换第1行开始到最后一行中每一行的所有is为IS</span><br><span class="line"></span><br><span class="line">3、命令模式下的命令：</span><br><span class="line">（1）G       到末行    *</span><br><span class="line">（2）gg      到首行</span><br><span class="line">（3）$       到行尾     *</span><br><span class="line">（4）^       到行首</span><br><span class="line">（5）ngg     跳转到n行</span><br><span class="line">（6）dd      删除一行，光标所在行</span><br><span class="line">（7）ndd     删除n行，从光标所在行向下删除n行</span><br><span class="line">（8）u       撤销</span><br><span class="line">（9）o       新增一行并进入到编辑模式，向下增加。如果是大写的o，就是向上增加。</span><br><span class="line">（10）i      进入编辑模式，在光标前编辑  *</span><br><span class="line">（11）a      进入编辑模式，在光标后编辑  *</span><br><span class="line">（12）x      删除一个字符。   *</span><br><span class="line">（13）D      删除当前光标所在位置到行尾的内容  *</span><br><span class="line">（14）/搜索字符        字符串搜索，查找下一个，按n， 向下查找。如果向上查找，按N。 *</span><br><span class="line">（15）yy     复制   *</span><br><span class="line">（16）nyy    复制n行,从光标所在的位置往下复制   *</span><br><span class="line">（17）p      粘帖   *</span><br></pre></td></tr></table></figure><p>引用链接：<a href="http://www.jianshu.com/p/f6e0dce1feb5" target="_blank" rel="noopener">http://www.jianshu.com/p/f6e0dce1feb5</a><br></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Linux简介&quot;&gt;&lt;a href=&quot;#Linux简介&quot; class=&quot;headerlink&quot; title=&quot;Linux简介&quot;&gt;&lt;/a&gt;Linux简介&lt;/h2&gt;&lt;p&gt;Linux是一个Unix类操作系统,完全开发源码，多用户多任务，服务器(数据库服务器、Web服务器、
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>MAC环境下使用hexo+github搭建个人博客</title>
    <link href="http://yoursite.com/2017/12/19/MAC%E7%8E%AF%E5%A2%83%E4%B8%8B%E4%BD%BF%E7%94%A8hexo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2017/12/19/MAC环境下使用hexo-github搭建个人博客/</id>
    <published>2017-12-19T03:22:36.000Z</published>
    <updated>2017-12-19T07:30:29.000Z</updated>
    
    <content type="html"><![CDATA[<p>环境检查 :<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br><span class="line">git --version</span><br></pre></td></tr></table></figure></p><p>1.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo</span><br><span class="line">hexo -v</span><br></pre></td></tr></table></figure></p><ol><li>新建个hexo文件夹, cd到文件目录下</li><li><blockquote><p>hexo init</p></blockquote></li><li><blockquote><p>npm install hexo –save</p></blockquote></li><li><blockquote><p>hexo g (或 hexo generate)</p></blockquote></li><li><blockquote><p>hexo s (或 hexo server)</p></blockquote></li><li>这个时候应该会提示 :<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">INFO Start processing</span><br><span class="line">INFO Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure></li></ol><p>这个时候就可以通过访问 <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a>进行预览了<br><br>注意: 如果在hexo s操作报错的话, 可以运行下面命令在重新尝试</p><blockquote><p>npm install hexo-server –save</p><ol><li>安装主题<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">可以在github上搜索hexo theme, 其中有很多主题, 以下以next主题为例</span><br><span class="line">在本地hexo目录下输入:</span><br><span class="line">git clone https://github.com/iissnan/hexo-theme-next themes/next</span><br><span class="line">安装完成后找到themes文件夹, 会发现里面多了个next文件夹</span><br><span class="line">接下来回到hexo根目录下打开_config.yml文件</span><br><span class="line">修改 theme: landscape  =&gt;  theme: next</span><br><span class="line">在运行 hexo s  打开http://localhost:4000/</span><br></pre></td></tr></table></figure></li></ol></blockquote><ol><li><p>修改blog页面</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">打开根目录下的_config.yml</span><br><span class="line"># Site</span><br><span class="line"> title: 网站标题</span><br><span class="line"> subtitle: 副标题</span><br><span class="line"> description: 个人签名</span><br><span class="line"> author: 姓名</span><br><span class="line"> language: zh-Hans</span><br><span class="line"> timezone: Asia-Shanghai</span><br></pre></td></tr></table></figure></li><li><p>在github上新建仓库,在Repository name下面填写要创建的地址,这个地址是域名,比如:camellieeee.github.io</p></li><li>部署到hexo. 打开hexo目录<blockquote><p>vim _config.yml<br>寻找deploy属性(可用命令/deploy  n=&gt;下一个  N=&gt;上一个)<br>找到后修改为以下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">    type: git</span><br><span class="line">    repository: https://github.com/Camellieeee/Camellieeee.github.io</span><br><span class="line">    branch: master</span><br></pre></td></tr></table></figure></blockquote></li></ol><p>repository对应的是github仓库地址,注意冒号后面的空格</p><ol><li>运行以下命令进行部署<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">git init</span><br><span class="line">git remote add origin https://github.com/camellieeee/camellieeee.github.io</span><br><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d (或 hexo deploy)</span><br></pre></td></tr></table></figure></li></ol><p>这样就能在<a href="https://username.github.io" target="_blank" rel="noopener">https://username.github.io</a>上看到自己的博客了</p><ol><li>发布新文章:<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">hexo new post &apos;文章标题&apos;</span><br><span class="line">前往hexo/source/_posts文件夹,找到新建的文章进行编辑</span><br><span class="line">编辑完成后更新到github</span><br><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></li></ol><p>14.<a href="https://hexo.io/zh-cn/docs/writing.html" target="_blank" rel="noopener">hexo API: https://hexo.io/zh-cn/docs/writing.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;环境检查 :&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;b
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2017/12/18/hello-world/"/>
    <id>http://yoursite.com/2017/12/18/hello-world/</id>
    <published>2017-12-18T09:28:05.000Z</published>
    <updated>2017-12-18T09:28:05.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
